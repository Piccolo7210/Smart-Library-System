user mustakim;
worker_processes auto;
pid /home/mustakim/Desktop/IIT/Sem6/DistrubutedSystem/Phase3/logs/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Custom log paths in your project directory
    access_log /home/mustakim/Desktop/IIT/Sem6/DistrubutedSystem/Phase3/logs/access.log;
    error_log /home/mustakim/Desktop/IIT/Sem6/DistrubutedSystem/Phase3/logs/error.log;
server {
    listen 80;
    server_name smart-library.com;

    access_log /home/mustakim/Desktop/IIT/Sem6/DistrubutedSystem/Phase3/logs/smart-library-api.access.log;
    error_log /home/mustakim/Desktop/IIT/Sem6/DistrubutedSystem/Phase3/logs/smart-library-api.error.log;


    # User Service
    location /users/ {
        proxy_pass http://user-service:3001/api/users/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Books Service
    location /books/ {
        proxy_pass http://book-service:3002/api/books/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Loans Service
    location /loans/ {
        proxy_pass http://loan-service:3003/api/loans/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

   location / {
            return 200 '{"message": "Smart Library API Gateway", "services": {"users": "/api/users/", "books": "/api/books/", "loans": "/api/loans/"}}';
            add_header Content-Type application/json;
        }

        # Error handling
        error_page 404 /404.html;
        location = /404.html {
            internal;
            default_type application/json;
            return 404 '{"error": "Not Found"}';
        }
}
}